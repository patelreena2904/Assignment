#include <iostream>
#include <vector>
#include <unordered_map>

using namespace std;

int getMaximalNetworkRank(int n, vector<vector<int>>& cables) {
     vector<int> citySize(n);
        vector<vector<int>> commonRoads(n, vector<int>(n));
        for (auto& i : cables) {
            int a = i[0], b = i[1];
            citySize[a]++;
            citySize[b]++;
            commonRoads[a][b]++;
            commonRoads[b][a]++;
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                ans = max(ans, citySize[i] + citySize[j] - commonRoads[i][j]);
            }
        }
        return ans;
}

int main() {
    int n = 4;
    vector<vector<int>> cables = {{0,1},{0,3},{1,2},{1,3}};
    
    int maximalRank = getMaximalNetworkRank(n, cables);
    
    cout << "Maximal network rank: " << maximalRank << endl;
    
    return 0;
}